{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"high",
				"highest_eq"
			],
			[
				"bala",
				"balance_array"
			],
			[
				"Cal",
				"CalculateHighestEq"
			],
			[
				"Orders",
				"OrdersHistoryTotal	int"
			],
			[
				"old",
				"old_take"
			],
			[
				"MODE_MIN",
				"MODE_MINLOT"
			],
			[
				"MAR",
				"MarketInfo	double"
			],
			[
				"take",
				"take_price"
			],
			[
				"stop",
				"stop_price"
			],
			[
				"Margin",
				"CheckMarginLevel"
			],
			[
				"count",
				"count_falling(ohlc *candle, size_t start, size_t stop)	int"
			],
			[
				"Global",
				"GlobalVariableGet	double"
			],
			[
				"Glob",
				"GlobalVariableSet	datetime"
			],
			[
				"Glo",
				"GlobalVariableCheck	bool"
			],
			[
				"last",
				"last_apaor"
			],
			[
				"siset",
				"sister_bars	size_t"
			],
			[
				"las",
				"last_engulfing"
			],
			[
				"de",
				"demand_color"
			],
			[
				"desi",
				"desire_price"
			],
			[
				"OrderClo",
				"OrderCloseReliable"
			],
			[
				"tick",
				"ticket"
			],
			[
				"OrderS",
				"OrderStopLoss	double"
			],
			[
				"OrderO",
				"OrderOpenPrice"
			],
			[
				"OP_BU",
				"OP_BUYSTOP	4"
			],
			[
				"ORD",
				"OrderType	int"
			],
			[
				"send",
				"send_lot"
			],
			[
				"exit",
				"exit_price"
			],
			[
				"OP_BUY",
				"OP_BUYLIMIT	2"
			],
			[
				"OrderSend",
				"OrderSendReliable"
			],
			[
				"OrderClose",
				"OrderCloseTime	datetime"
			],
			[
				"OBJ",
				"OBJ_HLINE	1"
			],
			[
				"Obj",
				"ObjectMove	bool"
			],
			[
				"Trai",
				"TrailingStop"
			],
			[
				"ArrayCop",
				"ArrayCopyRates	int"
			],
			[
				"use",
				"use_fractal"
			],
			[
				"body",
				"body_fvb_open"
			],
			[
				"Get",
				"GetTickCount	int"
			],
			[
				"swin",
				"swing_point_1(ohlc *candle, size_t i, size_t n, size_t contraction)	zone"
			],
			[
				"wrb",
				"wrb_zone(ohlc *candle, size_t i, size_t n, size_t contraction, int h_zone)	zone"
			],
			[
				"GSL",
				"GSL_NEGINF	macro"
			],
			[
				"lowe",
				"lowest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"GSL_MAX",
				"GSL_MAX_DBL(a, b)	macro"
			],
			[
				"fra",
				"fractal_low(ohlc *candle, size_t i, size_t n, size_t l)	int"
			],
			[
				"GSL_MIN",
				"GSL_MIN_INT(a, b)	macro"
			],
			[
				"line",
				"line_buy"
			],
			[
				"tota",
				"total_objects"
			],
			[
				"entry",
				"entry_price"
			],
			[
				"Array",
				"ArraySize	int"
			],
			[
				"total",
				"total_fibo"
			],
			[
				"Obje",
				"ObjectType	int"
			],
			[
				"entr",
				"entry_price"
			],
			[
				"temp",
				"temp_send_lot"
			],
			[
				"AccountM",
				"AccountFreeMargin	double"
			],
			[
				"Objec",
				"ObjectSet	bool"
			],
			[
				"Order",
				"OrderProfit	double"
			],
			[
				"mult",
				"pip_mult_tab"
			],
			[
				"lo",
				"local_multiplier"
			],
			[
				"Norm",
				"NormalizeDouble	double"
			],
			[
				"MathR",
				"MathRound	double"
			],
			[
				"MathM",
				"MathMax	double"
			],
			[
				"sis",
				"ssize_t	typedef"
			],
			[
				"get_prio",
				"get_prior_low_fractal(ohlc *candle, size_t i, size_t n, size_t l)	int"
			],
			[
				"fractal",
				"fractal_low(ohlc *candle, size_t i, size_t n, size_t l)	int"
			],
			[
				"frac",
				"fractal(ohlc *candle, size_t i, size_t n, size_t l)	int"
			],
			[
				"point",
				"point_side(line l, point p)	double"
			],
			[
				"highe",
				"highest_point(ohlc *candle, size_t start, size_t stop)	point"
			],
			[
				"gls_pow",
				"gsl_pow_3(const double x)	double"
			],
			[
				"bull",
				"bull_apaor"
			],
			[
				"leng",
				"fractal_length"
			],
			[
				"s_",
				"s_pA	double"
			],
			[
				"FTL",
				"FLT_EPSILON	macro"
			],
			[
				"FLT",
				"FLT_EPSILON	macro"
			],
			[
				"FL",
				"FLT_EPSILON	macro"
			],
			[
				"gsl_co",
				"gsl_fcmp(const double x1, const double x2, const double epsilon)	int"
			],
			[
				"open",
				"open_line_name"
			],
			[
				"Object",
				"ObjectDelete	bool"
			],
			[
				"Send",
				"SendNotification	bool"
			],
			[
				"any",
				"any_wrb_hg_bull(ohlc *candle, int start, int stop, int n)	int"
			],
			[
				"lowest",
				"lowest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"lowesrt",
				"lowest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"bigg",
				"biggest_body(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"shadow",
				"shadow_bottom(ohlc *candle, int i)	double"
			],
			[
				"sh",
				"shadow_bottom(ohlc *candle, int i)	double"
			],
			[
				"shado",
				"shadow_bottom(ohlc *candle, int i)	double"
			],
			[
				"zone",
				"zone_size(zone *z)	int"
			],
			[
				"hamer",
				"hammer_line_bear(ohlc *candle, size_t i)	int"
			],
			[
				"hamme",
				"hammer_line_bear(ohlc *candle, size_t i)	int"
			],
			[
				"big",
				"big_body_bull(ohlc *candle, size_t i)	int"
			],
			[
				"lowes",
				"lowest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"bod",
				"body_mid_point(ohlc *candle, int i)	double"
			],
			[
				"deep",
				"deep_shadow_bottom(ohlc *candle, size_t i, size_t n)	int"
			],
			[
				"iBars",
				"iBars	int"
			],
			[
				"end",
				"end_bar"
			],
			[
				"contra",
				"contraction_body_size_break(ohlc *candle, size_t c1, size_t c2)	int"
			],
			[
				"wrn",
				"wrb_hg(ohlc *candle, int i)	int"
			],
			[
				"hig",
				"highest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"bigge",
				"biggest_shadow_bottom(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"sha",
				"shadow_upper(ohlc *candle, int i)	double"
			],
			[
				"sist",
				"sister_bars	size_t"
			],
			[
				"main",
				"main_bars	size_t"
			],
			[
				"lowers",
				"lowest_close(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"lowesr",
				"lowest_close(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"size",
				"size_t c1	ohlc *"
			],
			[
				"wrb_",
				"wrb_zone(ohlc *candle, size_t i, size_t n, size_t contraction)	zone"
			],
			[
				"contrac",
				"contraction_body_open"
			],
			[
				"swing",
				"swing_point_1"
			],
			[
				"low",
				"lowest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"cont",
				"contraction_body_size_break(ohlc *candle, size_t v1, size_t v2)	int"
			],
			[
				"con",
				"contraction_share"
			],
			[
				"len",
				"lenght_weak"
			],
			[
				"s",
				"size_t"
			],
			[
				"isWr",
				"isWrbHG"
			],
			[
				"C",
				"CFLAGS"
			],
			[
				"totla",
				"total_price"
			],
			[
				"Draw",
				"DrawHiddenStopLoss"
			],
			[
				"hid",
				"hidden_pips"
			],
			[
				"OrderSe",
				"OrderSelect	bool"
			],
			[
				"tp",
				"tp_line_name"
			],
			[
				"from",
				"from_date	statement"
			],
			[
				"look",
				"look_back"
			],
			[
				"prior",
				"prior_wrb"
			],
			[
				"pr",
				"precision"
			],
			[
				"bounce",
				"bounce_bear"
			],
			[
				"boun",
				"bounce_bull"
			],
			[
				"clo",
				"close_c1"
			],
			[
				"clos",
				"close_zone"
			],
			[
				"close",
				"close_c1"
			],
			[
				"op",
				"open_zone"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/huxley/Dropbox/code/mql/experts/j.a.r.v.i.s.mq4",
			"settings":
			{
				"buffer_size": 48357,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/huxley/Dropbox/code/mql/experts/include/hxl_money_management.mqh",
			"settings":
			{
				"buffer_size": 4685,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/huxley/Dropbox/code/Dashboard/client/app/lib/mm.py",
			"settings":
			{
				"buffer_size": 1839,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "def CalculateDeltaLot(stop_pips, max_dd, max_risk, leverage, lot_digits,\n                      min_lot_size, tick_value, account_balance, pips_history):\n    highest_eq = max(account_balance[-5:])\n#     print('balance max: ', highest_eq)\n    dd = sum(x for x in pips_history[-5:] if x < 0)\n#     print('dd: ', dd)\n    delta = dd / 5 if dd > stop_pips else stop_pips / 5\n#     print('delta: ', delta)\n    avg_rr = CalculateAverageRR(pips_history)\n#     print('avg_rr: ', avg_rr)\n    lot_delta = round((max_dd * account_balance[-1] / delta / 100 + max((account_balance[-1] - highest_eq) / delta / 100, 0)\n                 - max((highest_eq - account_balance[-1]) / (avg_rr * delta) / 100, 0)), lot_digits)\n#     print('lot_delta: ', lot_delta)\n    lot_risk = round(min(account_balance[-1] / 1000, account_balance[-1] * max_risk / stop_pips / 10), lot_digits)\n#     print('lot_risk: ', lot_risk)\n    lot_leverage = round(leverage * account_balance[-1] / (400000 + (20 * stop_pips * leverage)), lot_digits)\n#     print('lot_leverage: ', lot_leverage)\n    lot_size = max([min([lot_delta, lot_risk, lot_leverage]), min_lot_size])\n    return lot_delta, lot_risk, lot_leverage, lot_size",
			"settings":
			{
				"buffer_size": 1177,
				"line_ending": "Unix",
				"name": "def CalculateDeltaLot(stop_pips, max_dd, max_risk,"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 309.0,
		"selected_items":
		[
			[
				"make",
				"SnippetMaker: Make Snippet"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"clang",
				"Preferences: SublimeClang Settings â€“ Default"
			],
			[
				"resur",
				"PackageResourceViewer: Open Resource"
			],
			[
				"edit",
				"SnippetMaker: Edit Snippet"
			],
			[
				"Snippet: ",
				"Snippet: candle_c"
			],
			[
				"makesi",
				"SnippetMaker: Make Snippet"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"reid",
				"Indentation: Reindent Lines"
			],
			[
				"compi",
				"Compile mql4"
			],
			[
				"astyle",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"reide",
				"Indentation: Reindent Lines"
			],
			[
				"reident",
				"Indentation: Reindent Lines"
			],
			[
				"linter",
				"SublimeLint: Show All Errors"
			],
			[
				"mql",
				"Compile mql4"
			],
			[
				"comp",
				"Compile mql4"
			],
			[
				"reiden",
				"Indentation: Reindent Lines"
			],
			[
				"coff",
				"Coffee: Compile File"
			],
			[
				"coffe",
				"Coffee: Toggle Watch Mode"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"Coffee",
				"FindKeyConflicts: All Key Maps to Buffer"
			],
			[
				"control",
				"Package Control: List Packages"
			],
			[
				"ind",
				"Indentation: Reindent Lines"
			],
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"auto",
				"User: Python PEP8 Autoformat"
			],
			[
				"githu",
				"Github: Open File"
			],
			[
				"json",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			]
		],
		"width": 568.0
	},
	"console":
	{
		"height": 347.0,
		"history":
		[
			"os.getcwd()",
			"import os",
			"os",
			"ls",
			"import builtins",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/huxley/Pictures/Skype/pipsy.txt",
		"/home/huxley/Downloads/instant-ddsmm/Instant DDSMM/experts/DDSMM-Instant-v1.38.mq4",
		"/home/huxley/Documents/Gnome for power users.",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_ajctr.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_apaor.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_body.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_confirmation.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_dcm.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_fractal_break.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_fractals.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_fvb.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_trailing.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_vtr.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_zone.mq4",
		"/home/huxley/Dropbox/code/mql/experts/include/hxl_utils.mqh",
		"/home/huxley/Dropbox/code/mql/src/wrb_management.c",
		"/home/huxley/Dropbox/code/mql/console.log",
		"/home/huxley/Dropbox/code/mql/experts/libraries/LibOrderReliable4.mq4",
		"/home/huxley/Dropbox/code/mql/src/wrb_export.c",
		"/home/huxley/Dropbox/code/mql/src/candle.h",
		"/home/huxley/Dropbox/code/mql/src/wrb_analysis.h",
		"/home/huxley/Dropbox/github/clojure-koans/src/koans/01_equalities.clj",
		"/home/huxley/Dropbox/code/mql/src/candle.c_back",
		"/home/huxley/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/huxley/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/huxley/Dropbox/code/mql/experts/j.a.r.v.i.s.mq4",
		"/home/huxley/Dropbox/code/mql/src/wrb_confirmation.h",
		"/home/huxley/Dropbox/code/mql/src/wrb_confirmation.c",
		"/home/huxley/Dropbox/code/mql/experts/include/wrb_analysis.mqh",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_zone_buffer.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_fvb_buffer.mq4",
		"/home/huxley/Dropbox/code/mql/src/wrb_zone.c",
		"/home/huxley/Dropbox/code/mql/src/wrb_vtr.c",
		"/home/huxley/Dropbox/code/mql/src/wrb_fvb.c",
		"/home/huxley/Dropbox/code/mql/src/wrb_zone.h",
		"/home/huxley/Dropbox/code/mql/src/wrb_vtr.c_back",
		"/home/huxley/Dropbox/code/mql/src/wrb_vtr.h",
		"/home/huxley/Dropbox/code/mql/src/wrb_toolbox.h",
		"/home/huxley/Dropbox/code/mql/src/wrb_toolbox.c",
		"/home/huxley/Dropbox/code/mql/src/wrb_fvb.h",
		"/home/huxley/Dropbox/code/mql/src/wrb_apaor.c",
		"/home/huxley/Dropbox/code/mql/src/wrb_apaor.h",
		"/home/huxley/Dropbox/code/mql/src/wrb_analysis.c",
		"/home/huxley/Dropbox/code/mql/src/wrb_ajctr.h",
		"/home/huxley/Dropbox/code/mql/src/wrb_ajctr.c",
		"/home/huxley/Dropbox/code/mql/wrb_analysis.def",
		"/home/huxley/Dropbox/code/mql/src/wrb_management.h",
		"/home/huxley/Dropbox/code/mql/makefile",
		"/home/huxley/Dropbox/code/mql/src/gsl_math.c",
		"/home/huxley/Dropbox/code/mql/experts/indicators/hxl_test.mq4",
		"/tmp/gsl_math-1.c",
		"/home/huxley/Dropbox/code/mql/gsl_math.def",
		"/tmp/gsl_math.c",
		"/home/huxley/Dropbox/code/Dashboard/client/app/lib/mm.py",
		"/home/huxley/Dropbox/code/mql/src/deepthroat.h",
		"/home/huxley/Dropbox/code/mql/experts/include/gsl_math.mqh",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/indicators/Ribelo DDSM.mq4",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/mini supply&emand semi-auto trading robot by Ribelo.mq4",
		"/home/huxley/.cache/.fr-yeuq07/clojurescript-git/PKGBUILD",
		"/home/huxley/.cache/.fr-T9Q4Lq/clojurescript-git/clojurescript.sh",
		"/home/huxley/Dropbox/code/mql/.gitignore",
		"/home/huxley/Dropbox/code/mql/experts/indicators/gsl_test.mq4",
		"/home/huxley/Dropbox/code/mql/experts/include/hxl_math.mqh",
		"/home/huxley/Dropbox/code/mql/experts/indicators/mql.sublime-project",
		"/home/huxley/Dropbox/code/mql/experts/include/LibGMT.mqh",
		"/home/huxley/Dropbox/code/mql/wrb_analysis.sublime-project",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/include/gsl.mqh",
		"/home/huxley/Dropbox/code/c_wrb_analysis/makefile",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_apaor.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_apaor.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_export.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_zone.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_toolbox.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_apaor.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/include/wrb_analysis.mqh",
		"/home/huxley/Dropbox/code/c_wrb_analysis/wrb_analysis.def",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_fractals.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_fvb.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_vtr.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_ajctr.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_body.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_confirmation.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_dcm.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_fractal_break.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_divergence.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_divergence.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/candle.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/candle.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_divergence.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_struct.h",
		"/home/huxley/.config/sublime-text-3/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/home/huxley/Dropbox/code/c_wrb_analysis/conole.log",
		"/home/huxley/Dropbox/code/c_wrb_analysis/console.log",
		"/home/huxley/.config/sublime-text-3/Packages/User/c_candle.sublime-snippet",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_fvb.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_ajctr.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_zone.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_fvb.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_vtr.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_vtr.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_ajctr.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_zone.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_analysis.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_confirmation.h",
		"/home/huxley/.config/sublime-text-3/Packages/SublimeAStyleFormatter/SublimeAStyleFormatter.sublime-settings",
		"/home/huxley/.config/sublime-text-3/Packages/User/test.sublime-macro",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_analysis.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/deepthroat.h",
		"/home/huxley/.config/sublime-text-3/Packages/SublimeAStyleFormatter/Default (Linux).sublime-keymap",
		"/usr/x86_64-w64-mingw32/include/gsl/gsl_math.h",
		"/tmp/candle-4.h",
		"/tmp/candle-5.h",
		"/tmp/candle-6.h",
		"/tmp/candle-7.h",
		"/tmp/candle-3.h",
		"/tmp/candle-2.h",
		"/tmp/candle-1.h",
		"/tmp/candle.h",
		"/home/huxley/.cache/.fr-aJnWua/mingw-w64-gsl/PKGBUILD",
		"/usr/x86_64-w64-mingw32/include/gsl/gsl_sum.h",
		"/usr/x86_64-w64-mingw32/include/gsl/gsl_inline.h",
		"/home/huxley/.config/sublime-text-3/Packages/SublimeClang/Default.sublime-keymap",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/indicators/Ribelo_SupDem.mq4",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/samples/DLLSample/ExpertSample.cpp",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/indicators/Ribelo_II_SupDem.mq4",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/indicators/Ribelo FVB.mq4",
		"/home/huxley/.config/sublime-text-3/Packages/C++/C++.sublime-settings",
		"/home/huxley/.zsh_history"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 106.0,
		"where_history":
		[
			"/home/huxley/Dropbox/code/mql/experts/indicators",
			"/home/huxley/Dropbox/code/mql/src",
			"/home/huxley/Dropbox/code/mql",
			"/home/huxley/Dropbox/code/mql/src",
			"/home/huxley/Dropbox/code/mql/experts/",
			"/home/huxley/Dropbox/code/mql/experts/indicators",
			"/home/huxley/Dropbox/code/c_wrb_analysis",
			"/home/huxley/Dropbox/code/heisenbug/heisenbug",
			"/home/huxley/Dropbox/code/c_wrb_analysis",
			"<open folders>",
			"/home/huxley/Dropbox/code/heisenbug/heisenbug,/home/huxley/Dropbox/code/deepthroat/deepthroat",
			"/home/huxley/Dropbox/code/heisenbug/heisenbug",
			"<open folders>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Calculate",
			"CalculateHighestEq",
			"$D$9",
			"$D$10",
			"$D$8",
			"$D$11",
			"X23",
			"max_dd",
			"L23",
			"D22",
			"$D$7",
			"Q23",
			"calculatedynamicdeltaswa",
			"calculate",
			"high_eq",
			"CalculateDynamicDeltaSwansonLot",
			"timein",
			"Support",
			"resistance",
			"support",
			"Time[0]",
			"\"Tahoma\"",
			"PendingToFibo",
			"FiboToPending",
			"double",
			"MODE_LOTSTEP",
			"SupplyDemandTrading",
			"_bid()",
			"_ask()",
			"(), ",
			"_ask(),",
			"_ask()",
			"_ask",
			"pnow < price",
			" < ",
			"pnow < price",
			"pnow",
			"symbol",
			"symb",
			">",
			"if (stoploss > 0  ||  takeprofit > 0) {",
			"if (takeprofit > 0) {",
			"if (stoploss > 0) {",
			">",
			"spread",
			"Bid",
			"Ask",
			"O_R_GetOrderDetails",
			"ask",
			"temp_send_lot",
			"OrderSendReliableMKT",
			"OrderSendReliable",
			"OrderSendReliableMKT2Step",
			"i_name",
			"PREFIX",
			"false",
			"last_apaor",
			"read",
			"trong Continuation 4",
			"last_sc4",
			"last_sc3",
			"last_sc2",
			"last_sc1",
			"Swing Point 3",
			"last_sp3",
			"last_sp2",
			"last_sp1",
			"VTR",
			"last_vtr",
			"FVB",
			"last_fvb",
			"Confirmation H3",
			"last_conf_h3",
			"H3",
			"last_conf_h3",
			"E",
			"last_conf_e",
			"E",
			"last_conf_e",
			"E",
			"last_conf_e",
			"if (send_notification == true) {\n                    if (i == 1) {\n                        if (r[3] == 1) {\n                            SendNotification(\"confirmation bull h1 at \" + TimeToStr(iTime(symbol, tf, i)));\n                        } else if (r[3] == -1) {\n                            SendNotification(\"confirmation bear h1 at \" + TimeToStr(iTime(symbol, tf, i)));\n                        }\n                    }\n                }",
			"A",
			"last_conf_a",
			"A",
			"last_conf_a",
			"A",
			"last_conf_a",
			"hammer",
			"Hammer",
			"engulfing",
			"Engulfing",
			"harami",
			"Harami",
			"last_hammer",
			"Hammer",
			"name = \"",
			"name = ",
			"DateToStr",
			"(candle, n - i - 1, n, contraction)",
			"(candle, n - i - 1)",
			"contraction",
			"(candle, n - i - 1)",
			"ajctr",
			"start",
			"use_conf_h_zone",
			"Open[r[2]]",
			"Close[r[2]]",
			"Close[r[1]]",
			"Open[r[1]]",
			"Close[i]",
			"Open[i]",
			"Close[r[0] + j]",
			"Open[r[0] + j]",
			"Close[r[0]]",
			"Open[r[0]]",
			"Time[pA]",
			"Time[pB]",
			"], ",
			"Time[pB],",
			"Time[pB]",
			"Time[i]",
			"Time[r[0] + 1]",
			"Close[r[0] + j]",
			"Open[r[0] + j]",
			"Open[r[1] - 1]",
			"Open[r[1]]",
			"Open[r[0] + 1]"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"iOpen(symbol, tf, r[2])",
			"iClose(symbol, tf, r[2])",
			"iClose(symbol, tf, r[1])",
			"iOpen(symbol, tf, r[1])",
			"iClose(symbol, tf, i)",
			"iOpen(symbol, tf, i)",
			"iClose(symbol, tf, r[0] + j)",
			"iOpen(symbol, tf, r[0] + j)",
			"iClose(symbol, tf, r[0])",
			"iOpen(symbol, tf, r[0])",
			"iTime(symbol, tf, i)",
			"iOpen(symbol, tf, r[0])",
			"iBars(symbol, tf)",
			"wrb(candle, i, n)",
			"wrb(candle, i, n)\nwrb(candle, i, n)",
			").",
			"hxl_utils",
			"_new_bar",
			"wrb_vtr.o",
			"wrb_fvb.o",
			"wrb_apaor.o",
			"wrb_ajctr.o",
			"wrb_zone.o",
			"candle",
			"APAOR",
			"send_notification",
			"zone r = {};",
			"zone z = {};",
			"signal r = {};",
			"body r = {.dir = 0, .open = 0, .close = 0, .nr = -1};",
			"nr",
			"_vtr",
			"_fvb",
			"body_size",
			"candle_size",
			"wrb",
			"is_wrb_hg",
			"wrb",
			"is_wrb",
			"c2",
			"c1",
			"wrb_analysis.mqh",
			"\"Copyright Â© 2014",
			"Huxley",
			"huxley.source@gmail",
			"go_short",
			"go_long",
			"math.fmax",
			"int[:]",
			"int32",
			"int i",
			"int size",
			"int",
			"np.ndarray[np.float64_t] r ",
			"np.ndarray[np.int64_t] r ",
			"char[:] reaction",
			"np.ndarray[np.int8_t] r",
			"char",
			"double[:]",
			"float[:]",
			"char[:]",
			"long[:]",
			"char[:]",
			"np.ndarray[np.int8_t]",
			"np.ndarray[np.int64_t]",
			"np.ndarray[np.float64_t]",
			"np.ndarray[np.int32_t]",
			"np.ndarray[np.int64_t]",
			"np.ndarray[np.ing64_t]",
			"np.ndarray[np.float64_t]",
			"strong_expand_left",
			"strong_expand_right",
			"expand_left",
			"expand_right",
			"week_expand_left",
			"week_expand_right",
			"i",
			"np.ndarray[np.float64_t] r = ",
			"np.ndarray[np.int64_t] r = ",
			"np.ndarray[np.int8_t] r = ",
			"long[:]",
			"char[:]",
			"double[:]",
			"char[:]",
			"double[:]",
			"long[:]",
			"double[:]",
			"k",
			"_args",
			"symbol",
			"TIMEFRAMES",
			"CURRENCY_PAIRS",
			").min()",
			").max()",
			"from app.tool import deepthroat as dt",
			"app.config",
			"config",
			"server",
			"config",
			"QUANTUM_LOOK_BACK",
			"QUANTUM_CONTRACTION",
			"CONTRACTION",
			"from server.tool import deepthroat as dt",
			"'",
			"low[i] + (high[i] - low[i])*.8",
			"low[i] + (high[i] - low[i])*.2",
			"low[i] + (high[i] - low[i])*.1",
			"low[i] + (high[i] - low[i])*.9",
			" low[i] + (high[i] - low[i])*.1",
			"(high[i] - low[i])*.3 + low[i]",
			"(high[i] - low[i])*.1 + low[i]",
			"(high[i] - low[i])*.8 + low[i]",
			"(high[i] - low[i])*.2 + low[i]",
			"(high[i] - low[i])*.9 + low[i]",
			"):",
			"bar_mid_point[i]",
			"wrb[i]",
			"[i-2]",
			"[i-1]",
			"volume_average[i]",
			"volume[i]",
			"volume",
			"bar_size[i]",
			"",
			"bar_size[i]",
			"",
			"bar_size[i]",
			"volume[i]"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/huxley/Dropbox/code/mql/experts/j.a.r.v.i.s.mq4",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48357,
						"regions":
						{
						},
						"selection":
						[
							[
								22282,
								22282
							]
						],
						"settings":
						{
							"syntax": "Packages/MetaQuotes (MQL4) Language Package/Syntaxes/MQL4.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7779.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/huxley/Dropbox/code/mql/experts/include/hxl_money_management.mqh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4685,
						"regions":
						{
						},
						"selection":
						[
							[
								4684,
								4684
							]
						],
						"settings":
						{
							"syntax": "Packages/MetaQuotes (MQL4) Language Package/Syntaxes/MQL4.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1651.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/huxley/Dropbox/code/Dashboard/client/app/lib/mm.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1839,
						"regions":
						{
						},
						"selection":
						[
							[
								47,
								47
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1177,
						"regions":
						{
						},
						"selection":
						[
							[
								702,
								702
							]
						],
						"settings":
						{
							"auto_name": "def CalculateDeltaLot(stop_pips, max_dd, max_risk,",
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 65.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.795212234034,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 105.0
	},
	"output.exec":
	{
		"height": 108.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mql4log":
	{
		"height": 190.0
	},
	"project": "mql.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"_wrb_fvb",
				"c_wrb_analysis/src/wrb_fvb.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Dropbox/code/Dashboard/server/app/server.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 400.0,
		"selected_items":
		[
			[
				"cal",
				"CalculateDeltaLot"
			]
		],
		"width": 400.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 217.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
