{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"line",
				"line_buy"
			],
			[
				"last",
				"last_time"
			],
			[
				"tota",
				"total_objects"
			],
			[
				"entry",
				"entry_price"
			],
			[
				"Array",
				"ArraySize	int"
			],
			[
				"total",
				"total_fibo"
			],
			[
				"OBJ",
				"OBJ_FIBO	10"
			],
			[
				"Obje",
				"ObjectType	int"
			],
			[
				"entr",
				"entry_price"
			],
			[
				"temp",
				"temp_send_lot"
			],
			[
				"tick",
				"tickvalue"
			],
			[
				"AccountM",
				"AccountFreeMargin	double"
			],
			[
				"Objec",
				"ObjectSet	bool"
			],
			[
				"Order",
				"OrderProfit	double"
			],
			[
				"mult",
				"pip_mult_tab"
			],
			[
				"lo",
				"local_multiplier"
			],
			[
				"Norm",
				"NormalizeDouble	double"
			],
			[
				"MathR",
				"MathRound	double"
			],
			[
				"MathM",
				"MathMax	double"
			],
			[
				"GSL_MAX",
				"GSL_MAX_INT(a, b)	macro"
			],
			[
				"sis",
				"ssize_t	typedef"
			],
			[
				"get_prio",
				"get_prior_low_fractal(ohlc *candle, size_t i, size_t n, size_t l)	int"
			],
			[
				"fractal",
				"fractal_low(ohlc *candle, size_t i, size_t n, size_t l)	int"
			],
			[
				"frac",
				"fractal(ohlc *candle, size_t i, size_t n, size_t l)	int"
			],
			[
				"point",
				"point_side(line l, point p)	double"
			],
			[
				"highe",
				"highest_point(ohlc *candle, size_t start, size_t stop)	point"
			],
			[
				"gls_pow",
				"gsl_pow_3(const double x)	double"
			],
			[
				"bull",
				"bull_apaor"
			],
			[
				"leng",
				"fractal_length"
			],
			[
				"s_",
				"s_pA	double"
			],
			[
				"GSL",
				"GSL_MIN	macro"
			],
			[
				"FTL",
				"FLT_EPSILON	macro"
			],
			[
				"FLT",
				"FLT_EPSILON	macro"
			],
			[
				"FL",
				"FLT_EPSILON	macro"
			],
			[
				"gsl_co",
				"gsl_fcmp(const double x1, const double x2, const double epsilon)	int"
			],
			[
				"open",
				"open_line_name"
			],
			[
				"Object",
				"ObjectDelete	bool"
			],
			[
				"Send",
				"SendNotification	bool"
			],
			[
				"send",
				"send_notyfication"
			],
			[
				"body",
				"body_size"
			],
			[
				"any",
				"any_wrb_hg_bull(ohlc *candle, int start, int stop, int n)	int"
			],
			[
				"wrb",
				"wrb(ohlc *candle, int i)	body"
			],
			[
				"lowest",
				"lowest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"lowesrt",
				"lowest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"bigg",
				"biggest_body(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"shadow",
				"shadow_bottom(ohlc *candle, int i)	double"
			],
			[
				"sh",
				"shadow_bottom(ohlc *candle, int i)	double"
			],
			[
				"shado",
				"shadow_bottom(ohlc *candle, int i)	double"
			],
			[
				"zone",
				"zone_size(zone *z)	int"
			],
			[
				"hamer",
				"hammer_line_bear(ohlc *candle, size_t i)	int"
			],
			[
				"high",
				"highest_high(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"hamme",
				"hammer_line_bear(ohlc *candle, size_t i)	int"
			],
			[
				"big",
				"big_body_bull(ohlc *candle, size_t i)	int"
			],
			[
				"lowes",
				"lowest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"bod",
				"body_mid_point(ohlc *candle, int i)	double"
			],
			[
				"deep",
				"deep_shadow_bottom(ohlc *candle, size_t i, size_t n)	int"
			],
			[
				"iBars",
				"iBars	int"
			],
			[
				"end",
				"end_bar"
			],
			[
				"contra",
				"contraction_body_size_break(ohlc *candle, size_t c1, size_t c2)	int"
			],
			[
				"wrn",
				"wrb_hg(ohlc *candle, int i)	int"
			],
			[
				"hig",
				"highest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"bigge",
				"biggest_shadow_bottom(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"sha",
				"shadow_upper(ohlc *candle, int i)	double"
			],
			[
				"lowe",
				"lowest_high(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"sist",
				"sister_bars	size_t"
			],
			[
				"main",
				"main_bars	size_t"
			],
			[
				"lowers",
				"lowest_close(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"lowesr",
				"lowest_close(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"size",
				"size_t c1	ohlc *"
			],
			[
				"wrb_",
				"wrb_zone(ohlc *candle, size_t i, size_t n, size_t contraction)	zone"
			],
			[
				"contrac",
				"contraction_body_open"
			],
			[
				"swing",
				"swing_point_1"
			],
			[
				"low",
				"lowest_low(ohlc *candle, size_t start, size_t stop)	double"
			],
			[
				"cont",
				"contraction_body_size_break(ohlc *candle, size_t v1, size_t v2)	int"
			],
			[
				"con",
				"contraction_share"
			],
			[
				"swin",
				"swing_point"
			],
			[
				"len",
				"lenght_weak"
			],
			[
				"s",
				"size_t"
			],
			[
				"fra",
				"fractal"
			],
			[
				"isWr",
				"isWrbHG"
			],
			[
				"C",
				"CFLAGS"
			],
			[
				"totla",
				"total_price"
			],
			[
				"Draw",
				"DrawHiddenStopLoss"
			],
			[
				"hid",
				"hidden_pips"
			],
			[
				"old",
				"old_take"
			],
			[
				"OrderSe",
				"OrderSelect	bool"
			],
			[
				"tp",
				"tp_line_name"
			],
			[
				"from",
				"from_date	statement"
			],
			[
				"look",
				"look_back"
			],
			[
				"prior",
				"prior_wrb"
			],
			[
				"pr",
				"precision"
			],
			[
				"bounce",
				"bounce_bear"
			],
			[
				"boun",
				"bounce_bull"
			],
			[
				"clo",
				"close_c1"
			],
			[
				"clos",
				"close_zone"
			],
			[
				"close",
				"close_c1"
			],
			[
				"op",
				"open_zone"
			],
			[
				"body_mid",
				"body_mid_point"
			],
			[
				"las",
				"last_high"
			],
			[
				"rae",
				"reaction_high"
			],
			[
				"shad",
				"shadow_upper"
			],
			[
				"st",
				"stop"
			],
			[
				"bo",
				"body_mid_point"
			],
			[
				"fill",
				"filled_by"
			],
			[
				"prio",
				"prior_wrb"
			],
			[
				"pa",
				"path	import"
			],
			[
				"ex",
				"extensions	statement"
			],
			[
				"apply",
				"apply_async	function"
			],
			[
				"re",
				"result	forflow"
			],
			[
				"app",
				"append"
			],
			[
				"map",
				"map_async	function"
			],
			[
				"time",
				"timeframe	param"
			],
			[
				"sym",
				"SYMBOLS	statement"
			],
			[
				"quotes",
				"quotes_save"
			],
			[
				"HDF",
				"HDF_STORE"
			],
			[
				"cun",
				"concurrent"
			],
			[
				"int",
				"int8"
			],
			[
				"in",
				"int8"
			],
			[
				"exe",
				"executor	statement"
			],
			[
				"fo",
				"forever"
			],
			[
				"INDICA",
				"indicator_list"
			],
			[
				"fir",
				"first_run"
			],
			[
				"cu",
				"currencies"
			],
			[
				"th",
				"threading  (module)"
			],
			[
				"get",
				"get_info"
			],
			[
				"json",
				"jsonify	statement"
			],
			[
				"j",
				"json"
			],
			[
				"c",
				"config	(attribute, instance)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/home/huxley/Dropbox/code/mql/makefile",
			"settings":
			{
				"buffer_size": 1770,
				"line_ending": "Unix"
			}
		},
		{
			"file": "wrb_analysis_trailing.mq4",
			"settings":
			{
				"buffer_size": 5021,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "[SideBarGit@SublimeText] \nwarning: push.default is unset; its implicit value is changing in\nGit 2.0 from 'matching' to 'simple'. To squelch this message\nand maintain the current behavior after the default changes, use:\n\n  git config --global push.default matching\n\nTo squelch this message and adopt the new behavior now, use:\n\n  git config --global push.default simple\n\nSee 'git help config' and search for 'push.default' for further information.\n(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode\n'current' instead of 'simple' if you sometimes use older versions of Git)\n\nTo https://huxley_source@bitbucket.org/huxley_source/mt4.git\n   f3bcf1d..03b5c90  master -> master",
			"settings":
			{
				"buffer_size": 690,
				"line_ending": "Unix",
				"name": "[SideBarGit@SublimeText]",
				"scratch": true
			}
		},
		{
			"file": "/home/huxley/Dropbox/code/mql/wrb_analysis.def",
			"settings":
			{
				"buffer_size": 558,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/huxley/Dropbox/code/mql/gsl_math.def",
			"settings":
			{
				"buffer_size": 67,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/huxley/Dropbox/code/mql/src/wrb_export.c",
			"settings":
			{
				"buffer_size": 18730,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/huxley/Dropbox/code/mql/experts/include/wrb_analysis.mqh",
			"settings":
			{
				"buffer_size": 2787,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/huxley/Dropbox/code/mql/console.log",
			"settings":
			{
				"buffer_size": 13419,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 309.0,
		"selected_items":
		[
			[
				"make",
				"SnippetMaker: Make Snippet"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"clang",
				"Preferences: SublimeClang Settings â€“ Default"
			],
			[
				"resur",
				"PackageResourceViewer: Open Resource"
			],
			[
				"edit",
				"SnippetMaker: Edit Snippet"
			],
			[
				"Snippet: ",
				"Snippet: candle_c"
			],
			[
				"makesi",
				"SnippetMaker: Make Snippet"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"reid",
				"Indentation: Reindent Lines"
			],
			[
				"compi",
				"Compile mql4"
			],
			[
				"astyle",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"reide",
				"Indentation: Reindent Lines"
			],
			[
				"reident",
				"Indentation: Reindent Lines"
			],
			[
				"linter",
				"SublimeLint: Show All Errors"
			],
			[
				"mql",
				"Compile mql4"
			],
			[
				"comp",
				"Compile mql4"
			],
			[
				"reiden",
				"Indentation: Reindent Lines"
			],
			[
				"coff",
				"Coffee: Compile File"
			],
			[
				"coffe",
				"Coffee: Toggle Watch Mode"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"Coffee",
				"FindKeyConflicts: All Key Maps to Buffer"
			],
			[
				"control",
				"Package Control: List Packages"
			],
			[
				"ind",
				"Indentation: Reindent Lines"
			],
			[
				"rei",
				"Indentation: Reindent Lines"
			],
			[
				"indent",
				"Indentation: Reindent Lines"
			],
			[
				"auto",
				"User: Python PEP8 Autoformat"
			],
			[
				"githu",
				"Github: Open File"
			],
			[
				"json",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			]
		],
		"width": 568.0
	},
	"console":
	{
		"height": 347.0,
		"history":
		[
			"os.getcwd()",
			"import os",
			"os",
			"ls",
			"import builtins",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/huxley/Dropbox/code/mql/src/gsl_math.c",
		"/home/huxley/Dropbox/code/mql/experts/indicators/hxl_test.mq4",
		"/tmp/gsl_math-1.c",
		"/home/huxley/Dropbox/code/mql/src/wrb_toolbox.h",
		"/home/huxley/Dropbox/code/mql/src/wrb_analysis.h",
		"/home/huxley/Dropbox/code/mql/gsl_math.def",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_dcm.mq4",
		"/tmp/gsl_math.c",
		"/home/huxley/Dropbox/code/mql/src/candle.h",
		"/home/huxley/Dropbox/code/mql/src/wrb_vtr.c",
		"/home/huxley/Dropbox/code/mql/src/wrb_vtr.c_back",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_vtr.mq4",
		"/home/huxley/Dropbox/code/mql/src/wrb_zone.c",
		"/home/huxley/Dropbox/code/mql/src/wrb_export.c",
		"/home/huxley/Dropbox/code/mql/src/wrb_apaor.c",
		"/home/huxley/Dropbox/code/Dashboard/client/app/lib/mm.py",
		"/home/huxley/Dropbox/code/mql/src/deepthroat.h",
		"/home/huxley/Dropbox/code/mql/experts/include/gsl_math.mqh",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/indicators/Ribelo DDSM.mq4",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/mini supply&emand semi-auto trading robot by Ribelo.mq4",
		"/home/huxley/Dropbox/code/mql/experts/j.a.r.v.i.s.mq4",
		"/home/huxley/.cache/.fr-yeuq07/clojurescript-git/PKGBUILD",
		"/home/huxley/.cache/.fr-T9Q4Lq/clojurescript-git/clojurescript.sh",
		"/home/huxley/Dropbox/code/mql/.gitignore",
		"/home/huxley/Dropbox/code/mql/experts/indicators/gsl_test.mq4",
		"/home/huxley/Dropbox/code/mql/makefile",
		"/home/huxley/Dropbox/code/mql/experts/include/hxl_utils.mqh",
		"/home/huxley/Dropbox/code/mql/experts/include/hxl_math.mqh",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_ajctr.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_apaor.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_body.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_confirmation.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_fractal_break.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_fractals.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_fvb.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/wrb_analysis_zone.mq4",
		"/home/huxley/Dropbox/code/mql/experts/libraries/LibOrderReliable4.mq4",
		"/home/huxley/Dropbox/code/mql/experts/indicators/mql.sublime-project",
		"/home/huxley/Dropbox/code/mql/console.log",
		"/home/huxley/Dropbox/code/mql/experts/include/LibGMT.mqh",
		"/home/huxley/Dropbox/code/mql/wrb_analysis.sublime-project",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/include/gsl.mqh",
		"/home/huxley/Dropbox/code/c_wrb_analysis/makefile",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_apaor.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_apaor.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_export.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_zone.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_toolbox.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_apaor.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/include/wrb_analysis.mqh",
		"/home/huxley/Dropbox/code/c_wrb_analysis/wrb_analysis.def",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_fractals.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_fvb.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_vtr.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_ajctr.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_body.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_confirmation.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_dcm.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_fractal_break.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/experts/indicators/wrb_analysis_divergence.mq4",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_divergence.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/candle.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/candle.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_divergence.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_struct.h",
		"/home/huxley/.config/sublime-text-3/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/home/huxley/Dropbox/code/c_wrb_analysis/conole.log",
		"/home/huxley/Dropbox/code/c_wrb_analysis/console.log",
		"/home/huxley/.config/sublime-text-3/Packages/User/c_candle.sublime-snippet",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_fvb.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_ajctr.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_zone.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_fvb.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_vtr.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_vtr.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_ajctr.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_zone.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_analysis.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_confirmation.h",
		"/home/huxley/.config/sublime-text-3/Packages/SublimeAStyleFormatter/SublimeAStyleFormatter.sublime-settings",
		"/home/huxley/.config/sublime-text-3/Packages/User/test.sublime-macro",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_analysis.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/deepthroat.h",
		"/home/huxley/.config/sublime-text-3/Packages/SublimeAStyleFormatter/Default (Linux).sublime-keymap",
		"/usr/x86_64-w64-mingw32/include/gsl/gsl_math.h",
		"/tmp/candle-4.h",
		"/tmp/candle-5.h",
		"/tmp/candle-6.h",
		"/tmp/candle-7.h",
		"/tmp/candle-3.h",
		"/tmp/candle-2.h",
		"/tmp/candle-1.h",
		"/tmp/candle.h",
		"/home/huxley/.cache/.fr-aJnWua/mingw-w64-gsl/PKGBUILD",
		"/usr/x86_64-w64-mingw32/include/gsl/gsl_sum.h",
		"/usr/x86_64-w64-mingw32/include/gsl/gsl_inline.h",
		"/home/huxley/.config/sublime-text-3/Packages/SublimeClang/Default.sublime-keymap",
		"/home/huxley/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/huxley/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/indicators/Ribelo_SupDem.mq4",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/samples/DLLSample/ExpertSample.cpp",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/indicators/Ribelo_II_SupDem.mq4",
		"/home/huxley/Dropbox/trading/MetaTrader Admiral Markets AS/experts/indicators/Ribelo FVB.mq4",
		"/home/huxley/.config/sublime-text-3/Packages/C++/C++.sublime-settings",
		"/home/huxley/.zsh_history",
		"/home/huxley/.zdirs",
		"/home/huxley/Dropbox/code/c_wrb_analysis/console.txt",
		"/home/huxley/Dropbox/code/heisenbug/heisenbug/wrb/zone.pyx",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_toolbox.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src_back2/wrb_export.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src_back2/candle.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src_back2/candle.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src_back2/wrb_confirmation.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src_back2/wrb_fvb.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src_back2/wrb_toolbox.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src_back2/wrb_zone.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src/wrb_confirmation.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src_back2/wrb_analysis.c",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src_back2/wrb_analysis.h",
		"/home/huxley/Dropbox/code/c_wrb_analysis/src_back2/wrb_vtr.h",
		"/home/huxley/Dropbox/code/heisenbug/heisenbug/wrb/ajctr.pyx",
		"/home/huxley/Dropbox/code/heisenbug/heisenbug/__init__.py",
		"/home/huxley/Dropbox/code/heisenbug/heisenbug/wrb/analysis.pyx",
		"/home/huxley/Dropbox/code/heisenbug/heisenbug/wrb/confirmation.pyx",
		"/home/huxley/Dropbox/code/heisenbug/heisenbug/wrb/toolbox.pxd",
		"/home/huxley/Dropbox/code/heisenbug/heisenbug/wrb/analysis.c",
		"/home/huxley/Dropbox/code/heisenbug/heisenbug/wrb/analysis.html",
		"/home/huxley/Dropbox/code/heisenbug/heisenbug/wrb/confirmation.c"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 106.0,
		"where_history":
		[
			"/home/huxley/Dropbox/code/mql/src",
			"/home/huxley/Dropbox/code/mql/experts/",
			"/home/huxley/Dropbox/code/mql/experts/indicators",
			"/home/huxley/Dropbox/code/c_wrb_analysis",
			"/home/huxley/Dropbox/code/heisenbug/heisenbug",
			"/home/huxley/Dropbox/code/c_wrb_analysis",
			"<open folders>",
			"/home/huxley/Dropbox/code/heisenbug/heisenbug,/home/huxley/Dropbox/code/deepthroat/deepthroat",
			"/home/huxley/Dropbox/code/heisenbug/heisenbug",
			"<open folders>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"_wrb_unfilled",
			"candle, n - (i + j) - 1)",
			"(candle, n - i - 1 - j)",
			"for (j = 1",
			"_wrb_",
			"last_bear",
			"last_bull",
			"_wrb_hg",
			"wrb",
			"WRB",
			"wrb",
			"WRB",
			"wrb",
			"_wrb",
			"iOpen",
			"Open",
			"Bars",
			"bars",
			"Bars",
			"Open[i]",
			"line_buy",
			"sell_stop_loss",
			"last_bull",
			"buy",
			"wrb",
			"bar_width",
			"DRAW_HISTOGRAM",
			"bear_wrb_body",
			"bull_wrb_body",
			"Body",
			"precise",
			"printf",
			"unfilled",
			"d",
			"unfilled(main, i - j, i - 1)) ||",
			"unfilled(sister, i - j, i - 1))) {",
			"contraction_body_size_break",
			"body_size_break",
			"prior_wrb",
			"fill_prior_wrb_hg",
			"main_z",
			"print",
			"global",
			"found",
			"OrderModifyReliable",
			"total_fibo",
			"OBJ_FIBO",
			"0);",
			" 0);",
			"zone_size",
			"desire_rr",
			"entry_price[]",
			"exit_price",
			"entry_price",
			"zone_size",
			"entry_price",
			"for (",
			"objectget",
			"ObjectName(i)",
			");\n",
			"ObjectName(i);",
			"ObjectName(i)",
			"objectGet",
			"total",
			"stop_price",
			"Point",
			"Take",
			"take",
			"Take",
			"take",
			"Stop",
			"stop",
			"Stop",
			"stop",
			"take_rr",
			"stop_price",
			"lot_size3",
			"lot_size2",
			"lot_size1",
			"_tp_line_",
			"sl_line_name",
			"tp_line_name",
			"sd",
			"StringConcatenate(sd",
			"sd",
			"prefix",
			"//void DisplayUserFeedback()",
			"lot_val",
			"total_objects",
			"Point",
			"point",
			"Point",
			"label_time",
			"MathAbs",
			"stop_loss",
			"trigger",
			"GetSupply",
			"GetDemand",
			"temp_pending_pips",
			"stop_loos",
			"Point",
			"point",
			"Point",
			"demand_var[i][4]",
			"demand_var[i][3]",
			"demand_var[i][2]",
			"demand_var[i][1]",
			"demand_var[i][0]",
			"demand_name",
			" * buffer_size",
			"GetDemand",
			"ticket_no",
			"loss_trades",
			"win_trades",
			"entry_",
			"orders_history_total",
			"&",
			"cc",
			"if (orders_history_total > 0) {\n        int count = _imax(orders_history_total, 5);\n        ArrayResize(account_balance, orders_history_total);\n        for (int cc = 0; cc < orders_history_total; cc++) {\n            if (OrderSelect(cc, SELECT_BY_POS, MODE_HISTORY)) {\n                curr_balance += OrderProfit();\n                account_balance[cc] = curr_balance;\n            }\n        }\n        ArraySetAsSeries(account_balance, true);\n        for (cc = 0; cc < count; cc++) {\n            high_eq = MathMax(high_eq, account_balance[cc]);\n        }\n        for (cc = orders_history_total - count; cc < orders_history_total; cc++) {\n            if (OrderSelect(cc, SELECT_BY_POS, MODE_HISTORY)) {\n                if (OrderType() == 6 || OrderType() == 7) {\n                    count++;\n                    continue;\n                }\n                if (OrderProfit() < 0) {\n                    dd += MathAbs(OrderOpenPrice() - OrderClosePrice()) / MarketInfo(OrderSymbol(), MODE_POINT) / local_multiplier;\n                }\n            }\n        }\n    } else {\n        curr_balance = AccountBalance();\n        high_eq = AccountBalance();\n    }",
			"cc",
			"OrdersHistoryTotal()",
			"OrdersHistoryTotal",
			"local_multiplier",
			"dd.5",
			"[a-z]\\.[a-z]",
			"OrdersHistoryTotal()",
			"NormalizeDouble",
			"dd.5"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"hxl_utils",
			"_new_bar",
			"wrb_vtr.o",
			"wrb_fvb.o",
			"wrb_apaor.o",
			"wrb_ajctr.o",
			"wrb_zone.o",
			"candle",
			"APAOR",
			"send_notification",
			"zone r = {};",
			"zone z = {};",
			"signal r = {};",
			"body r = {.dir = 0, .open = 0, .close = 0, .nr = -1};",
			"nr",
			"_vtr",
			"_fvb",
			"body_size",
			"candle_size",
			"wrb",
			"is_wrb_hg",
			"wrb",
			"is_wrb",
			"c2",
			"c1",
			"wrb_analysis.mqh",
			"\"Copyright Â© 2014",
			"Huxley",
			"huxley.source@gmail",
			"go_short",
			"go_long",
			"math.fmax",
			"int[:]",
			"int32",
			"int i",
			"int size",
			"int",
			"np.ndarray[np.float64_t] r ",
			"np.ndarray[np.int64_t] r ",
			"char[:] reaction",
			"np.ndarray[np.int8_t] r",
			"char",
			"double[:]",
			"float[:]",
			"char[:]",
			"long[:]",
			"char[:]",
			"np.ndarray[np.int8_t]",
			"np.ndarray[np.int64_t]",
			"np.ndarray[np.float64_t]",
			"np.ndarray[np.int32_t]",
			"np.ndarray[np.int64_t]",
			"np.ndarray[np.ing64_t]",
			"np.ndarray[np.float64_t]",
			"strong_expand_left",
			"strong_expand_right",
			"expand_left",
			"expand_right",
			"week_expand_left",
			"week_expand_right",
			"i",
			"np.ndarray[np.float64_t] r = ",
			"np.ndarray[np.int64_t] r = ",
			"np.ndarray[np.int8_t] r = ",
			"long[:]",
			"char[:]",
			"double[:]",
			"char[:]",
			"double[:]",
			"long[:]",
			"double[:]",
			"k",
			"_args",
			"symbol",
			"TIMEFRAMES",
			"CURRENCY_PAIRS",
			").min()",
			").max()",
			"from app.tool import deepthroat as dt",
			"app.config",
			"config",
			"server",
			"config",
			"QUANTUM_LOOK_BACK",
			"QUANTUM_CONTRACTION",
			"CONTRACTION",
			"from server.tool import deepthroat as dt",
			"'",
			"low[i] + (high[i] - low[i])*.8",
			"low[i] + (high[i] - low[i])*.2",
			"low[i] + (high[i] - low[i])*.1",
			"low[i] + (high[i] - low[i])*.9",
			" low[i] + (high[i] - low[i])*.1",
			"(high[i] - low[i])*.3 + low[i]",
			"(high[i] - low[i])*.1 + low[i]",
			"(high[i] - low[i])*.8 + low[i]",
			"(high[i] - low[i])*.2 + low[i]",
			"(high[i] - low[i])*.9 + low[i]",
			"):",
			"bar_mid_point[i]",
			"wrb[i]",
			"[i-2]",
			"[i-1]",
			"volume_average[i]",
			"volume[i]",
			"volume",
			"bar_size[i]",
			"",
			"bar_size[i]",
			"",
			"bar_size[i]",
			"volume[i]",
			"[i+1]",
			"[i+2]",
			"[i+3]",
			"[i-3]",
			"[i-2]",
			"[i-1]",
			"open[i]",
			"close[i]",
			"low[i]",
			"high[i]",
			"close[i] < close[i-1]",
			"close[i] == high[i]",
			"low[i] <= low[i+1]",
			"close[i] < close[i+1]",
			"high[i] <= high[i-1]",
			"low[i] < low[i-1]"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/home/huxley/Dropbox/code/mql/makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1770,
						"regions":
						{
						},
						"selection":
						[
							[
								742,
								742
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "wrb_analysis_trailing.mq4",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5021,
						"regions":
						{
						},
						"selection":
						[
							[
								5021,
								5021
							]
						],
						"settings":
						{
							"syntax": "Packages/MetaQuotes (MQL4) Language Package/Syntaxes/MQL4.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1227.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 690,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "[SideBarGit@SublimeText]",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/huxley/Dropbox/code/mql/wrb_analysis.def",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 558,
						"regions":
						{
						},
						"selection":
						[
							[
								225,
								225
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/huxley/Dropbox/code/mql/gsl_math.def",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 67,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/huxley/Dropbox/code/mql/src/wrb_export.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18730,
						"regions":
						{
						},
						"selection":
						[
							[
								3842,
								3842
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2192.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/huxley/Dropbox/code/mql/experts/include/wrb_analysis.mqh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2787,
						"regions":
						{
						},
						"selection":
						[
							[
								688,
								688
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 7,
					"file": "/home/huxley/Dropbox/code/mql/console.log",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13419,
						"regions":
						{
						},
						"selection":
						[
							[
								1224,
								1224
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 663.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.71777476255,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 89.0
	},
	"output.exec":
	{
		"height": 108.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mql4log":
	{
		"height": 190.0
	},
	"project": "mql.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"_wrb_fvb",
				"c_wrb_analysis/src/wrb_fvb.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/Dropbox/code/Dashboard/server/app/server.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 400.0,
		"selected_items":
		[
			[
				"cal",
				"CalculateDeltaLot"
			]
		],
		"width": 400.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 206.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
